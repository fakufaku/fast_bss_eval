name: tests

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
        torch-version: [1.11]
        torch-complex-req: [""]
        include:
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.4
              torch-complex-req: "_torch_le_1_8"
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.5
              torch-complex-req: "_torch_le_1_8"
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.6
              torch-complex-req: "_torch_le_1_8"
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.7
              torch-complex-req: "_torch_le_1_8"
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.8
              torch-complex-req: "_torch_le_1_8"
            - os: ubuntu-latest
              python-version: 3.8
              torch-version: 1.9
              torch-complex-req: ""
            - os: ubuntu-latest
              python-version: 3.9
              torch-version: "1.10"
              torch-complex-req: ""

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/requirements${{ matrix.torch-complex-req }}.txt
        python -m pip install -U torch==${{ matrix.torch-version }}
        pip install -e .
    - name: Test and coverage with pytest
      run: |
        pip install pytest
        python -m pip freeze | grep torch
        pytest --cov=./fast_bss_eval --cov-report=xml
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
    - name: Publish sdist to pypi
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install wheel twine
        python setup.py sdist
        twine upload --skip-existing dist/*
